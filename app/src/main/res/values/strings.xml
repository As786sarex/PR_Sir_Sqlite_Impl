<resources>
    <string name="app_name">DBMS Project</string>
    <string name="student_name">Student Name :</string>
    <string name="birthday">Birthday :</string>
    <string name="major">Major :</string>
    <string name="registration_number">Registration number :</string>
    <string name="Drawer_Opened">Drawer opened</string>
    <string name="Drawer_Closed">Drawer Closed</string>
    <string name="schemaStudent">\n{
        "tableName": "STUDENT",\n\n
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`regno` TEXT NOT NULL, `name` TEXT NOT NULL, `major` TEXT NOT NULL, `bdate` INTEGER NOT NULL, PRIMARY KEY(`regno`))",\n\n
        "fields": [
          {\n
            "fieldPath": "regno",\n
            "columnName": "regno",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          },\n\n
          {
            "fieldPath": "name",\n
            "columnName": "name",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          },\n\n
          {
            "fieldPath": "major",\n
            "columnName": "major",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          },\n\n
          {
            "fieldPath": "bdate",\n
            "columnName": "bdate",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          }
        ],\n\n
        "primaryKey": {\n
          "columnNames": [\n
            "regno"\n
          ],\n
          "autoGenerate": false\n
        },\n
        "indices": [],\n
        "foreignKeys": []\n
      },\n
      </string>
    <string name="schemaCourse">\n{
        "tableName": "COURSE",\n\n
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`course` INTEGER NOT NULL, `cname` TEXT NOT NULL, `dept` TEXT NOT NULL, PRIMARY KEY(`course`))",\n\n
        "fields": [
          {\n
            "fieldPath": "course",\n
            "columnName": "course",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "cname",\n
            "columnName": "cname",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "dept",\n
            "columnName": "dept",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          }\n
        ],\n\n
        "primaryKey": {\n
          "columnNames": [\n
            "course"\n
          ],\n
          "autoGenerate": false\n
        },\n\n
        "indices": [],\n
        "foreignKeys": []\n
      }\n</string>
    <string name="schemaEnroll">
        \n{
        "tableName": "ENROLL",\n\n
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`regno` TEXT NOT NULL, `course` INTEGER NOT NULL, `sem` INTEGER NOT NULL, `marks` INTEGER NOT NULL, PRIMARY KEY(`regno`, `course`, `sem`))",\n\n
        "fields": [\n
          {\n
            "fieldPath": "regno",\n
            "columnName": "regno",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "course",\n
            "columnName": "course",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "sem",\n
            "columnName": "sem",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "marks",\n
            "columnName": "marks",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          }\n
        ],\n\n
        "primaryKey": {\n
          "columnNames": [\n
            "regno",\n
            "course",\n
            "sem"\n
          ],\n
          "autoGenerate": false\n
        },\n
        "indices": [],\n
        "foreignKeys": []\n
      }\n
    </string>
    <string name="schemaAdapt">
        \n{
        "tableName": "BOOK_ADAPTATION",\n\n
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`course` INTEGER NOT NULL, `sem` INTEGER NOT NULL, `book_isbn` INTEGER NOT NULL, PRIMARY KEY(`course`, `sem`), FOREIGN KEY(`book_isbn`) REFERENCES `TEXT`(`book_isbn`) ON UPDATE CASCADE ON DELETE NO ACTION )",\n\n
        "fields": [\n
          {\n
            "fieldPath": "course",\n
            "columnName": "course",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "sem",\n
            "columnName": "sem",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "book_isbn",\n
            "columnName": "book_isbn",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          }\n
        ],\n\n
        "primaryKey": {\n
          "columnNames": [\n
            "course",\n
            "sem"\n
          ],\n
          "autoGenerate": false\n
        },\n
        "indices": [],\n
        "foreignKeys": [\n
          {\n
            "table": "TEXT",\n
            "onDelete": "NO ACTION",\n
            "onUpdate": "CASCADE",\n
            "columns": [\n
              "book_isbn"\n
            ],\n\n
            "referencedColumns": [\n
              "book_isbn"\n
            ]\n\n
          }\n
        ]\n
      }\n
    </string>
    <string name="schemaBook">\n{
        "tableName": "TEXT",\n\n
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`book_isbn` INTEGER NOT NULL, `book_title` TEXT NOT NULL, `publisher` TEXT NOT NULL, `author` TEXT NOT NULL, PRIMARY KEY(`book_isbn`))",\n
        "fields": [\n
          {\n
            "fieldPath": "book_isbn",\n
            "columnName": "book_isbn",\n
            "affinity": "INTEGER",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "book_title",\n
            "columnName": "book_title",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "publisher",\n
            "columnName": "publisher",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          },\n\n
          {\n
            "fieldPath": "author",\n
            "columnName": "author",\n
            "affinity": "TEXT",\n
            "notNull": true\n
          }\n\n
        ],\n
        "primaryKey": {\n
          "columnNames": [\n
            "book_isbn"\n
          ],\n
          "autoGenerate": false\n
        },\n
        "indices": [],\n
        "foreignKeys": []\n
      }\n
    </string>
    <string name="createDatabaseQuery"></string>
    <string name="createTableQuery">\n\nCREATE TABLE IF NOT EXISTS `STUDENT` (`regno` TEXT NOT NULL,
        `name` TEXT NOT NULL, `major` TEXT NOT NULL, `bdate` INTEGER NOT NULL, PRIMARY KEY(`regno`))\n\n
    CREATE TABLE IF NOT EXISTS `COURSE` (`course` INTEGER NOT NULL,
        `cname` TEXT NOT NULL, `dept` TEXT NOT NULL, PRIMARY KEY(`course`))\n\n
    CREATE TABLE IF NOT EXISTS `ENROLL` (`regno` TEXT NOT NULL,
        `course` INTEGER NOT NULL, `sem` INTEGER NOT NULL, `marks` INTEGER NOT NULL, PRIMARY KEY(`regno`, `course`, `sem`))\n\n
    CREATE TABLE IF NOT EXISTS `BOOK_ADAPTATION` (`course` INTEGER NOT NULL,
        `sem` INTEGER NOT NULL, `book_isbn` INTEGER NOT NULL, PRIMARY KEY(`course`, `sem`),
        FOREIGN KEY(`book_isbn`) REFERENCES `TEXT`(`book_isbn`) ON UPDATE CASCADE ON DELETE NO ACTION )\n\n
    CREATE TABLE IF NOT EXISTS `TEXT` (`book_isbn` INTEGER NOT NULL,
        `book_title` TEXT NOT NULL, `publisher` TEXT NOT NULL, `author` TEXT NOT NULL, PRIMARY KEY(`book_isbn`))\n\n</string>
    <string name="insertIntoQuery">\n\nINSERT OR REPLACE INTO `STUDENT`(`regno`,`name`,`major`,`bdate`) VALUES (?,?,?,?)\n\n
    INSERT OR REPLACE INTO `COURSE`(`course`,`cname`,`dept`) VALUES (?,?,?)\n\n
    INSERT OR REPLACE INTO `ENROLL`(`regno`,`course`,`sem`,`marks`) VALUES (?,?,?,?)\n\n
    INSERT OR REPLACE INTO `ENROLL`(`regno`,`course`,`sem`,`marks`) VALUES (?,?,?,?)\n\n
    INSERT OR REPLACE INTO `BOOK_ADAPTATION`(`course`,`sem`,`book_isbn`) VALUES (?,?,?)\n\n
    INSERT OR REPLACE INTO `TEXT`(`book_isbn`,`book_title`,`publisher`,`author`) VALUES (?,?,?,?)\n\n</string>

    <string name="QuestionNo4Query">\n\nSELECT course,book_isbn,book_title FROM text NATURAL JOIN course NATURAL JOIN book_adaptation WHERE course IN (SELECT course FROM text NATURAL JOIN course NATURAL JOIN book_adaptation WHERE dept LIKE \'cse\' GROUP BY course HAVING COUNT(course)>=2)\n\n</string>

    <string name="Question5Query">\n\nSELECT dept FROM course NATURAL JOIN book_adaptation NATURAL JOIN text WHERE publisher LIKE ?
        EXCEPT SELECT dept FROM course NATURAL JOIN book_adaptation NATURAL JOIN text WHERE publisher NOT LIKE ?\n</string>

</resources>
